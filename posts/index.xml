<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
    <channel>
        <title>Posts on Gaveen Prabhasara</title>
        <link>https://gaveen.me/posts/</link>
        <description>Recent content in Posts on Gaveen Prabhasara</description>
        <generator>Hugo -- gohugo.io</generator>
        <language>en-us</language>
        <copyright>Gaveen Prabhasara</copyright>
        <lastBuildDate>Fri, 14 Feb 2020 20:00:00 +0530</lastBuildDate>
        <atom:link href="https://gaveen.me/posts/index.xml" rel="self" type="application/rss+xml" />
        
        <item>
            <title>My Vim Story</title>
            <link>https://gaveen.me/2020/02/my-vim-story/</link>
            <pubDate>Fri, 14 Feb 2020 20:00:00 +0530</pubDate>
            
            <guid>https://gaveen.me/2020/02/my-vim-story/</guid>
            <description>Once you have used &amp;rsquo;notepad.exe&amp;rsquo;, you have used all text editors—they said. A text editor is a text editor is a text editor—they said. After the first few years of running Linux/Unix professionally, I kind of subconsciously agreed with this idea, eventhough I knew Vim—I thought I knew Vim. But when other people who actually knew how to use Vim used it, Vim still looked like magic.
If you have worked in a command line at some point, I am sure you can appreciate the wisdom of learning how to use a text editing program properly.</description>
            <content type="html"><![CDATA[<p>Once you have used &rsquo;notepad.exe&rsquo;, you have used all text editors—they said. A text editor is a text editor is a text editor—they said. After the first few years of running Linux/Unix professionally, I kind of subconsciously agreed with this idea, eventhough I knew Vim—I thought I knew Vim. But when other people who actually knew how to use Vim used it, <a href="https://en.wikipedia.org/wiki/Vim_(text_editor)">Vim</a> still looked like magic.</p>
<p>If you have worked in a command line at some point, I am sure you can appreciate the wisdom of learning how to use a text editing program properly. On Unix/Linux command lines, text is king. Therefore, learning how to manipulate text effectively goes a long way for your productivity. If you know how to open a file and edit its content, that enables you to configure your system too.</p>
<p>The text editing program I prefer for these kind of work is Vim. It is also the text editor I can pretty much expect to find in any environment I log into—laptops and servers alike. Vim is available on multiple operating systems including Linux—which is my OS of choice.</p>
<p>There are other text editors I occasionally use such as &ldquo;<a href="https://wiki.gnome.org/Apps/Gedit">gedit</a>&rdquo; and &ldquo;<a href="https://gitlab.gnome.org/somas/apostrophe/">Apostrophe</a>&rdquo;. But, most of the time, when I am typing something, writing code, or editing a configuration file, I am using vim.</p>
<p>Like many before me, I started my text editor journey by running <code>vim</code>, promptly feeling lost, then failing to exit vim, and finally resigning to reboot the computer instead. Thus, I initially became an <code>emacs</code> user—primarily because <code>nano</code> was not well-known at that point. Eventually, I learned the bare minimum of vim use, just enough to do basic text editing.</p>
<p>What changed my mind about Vim was actually investing some time to learn it. Vim has a notorious learning curve. After years of already working on Linux, I only spent a decent amount of time to learn Vim and customize it to my liking somewhere around 2009. I can say without a doubt that I ended up liking Vim a lot—it definitely helped my productivity. It is powerful and versatile—and more importantly, did I mention I like it?</p>
<p>Back in the day, my vim setup was a jumble of config files and a bunch of plugins dropped into a directory until it croaked reasonably the way I wanted. It was done out of necessity because vim did not have decent package management for plugins at that point. Later when <a href="https://github.com/tpope/vim-pathogen">Pathogen</a> came along, I jumped at the opportunity to organize vimfiles better. While Pathogen made it easier to organize vimfiles and manage plugins, it did not have a inbuilt way of tracking changes from multiple plugin sources over time.</p>
<p>At this point I was already using <a href="https://git-scm.com/"><code>git</code></a> and I was familiar with the relatively new <a href="https://git-scm.com/docs/gitsubmodules"><code>git submodules</code></a> feature. I felt git submodules could be used to manage individual plugins effectively. I looked around to see if anyone had already thought of that. Eventhough I am pretty sure others may have thought about it—to the best of my knowledge—no one had publicly shared a similar setup at the time. So I did it using submodules—which was a humble brag for me. These past versions of my vim configuration files are no longer there. An <a href="https://github.com/gaveen/gavim">archived, somewhat-later version</a> is there in a git repo though.</p>
<p>Since then, the most obvious change in how I maintain my vim set up had been the switch to <code>vim-plug</code> for plugin management. The excellent vim-plug eliminated the need to juggle git submodules and made the whole process quite painless.</p>
<p>The sections below will describe the vim configuration I am using. I will try to keep this post reasonably updated in future as well, in the hope it might be useful to someone—just like it helped me to read what others were doing.</p>
<p>Few things to note:</p>
<ul>
<li>These should work with both regular <code>vim</code> or <a href="https://neovim.io/"><code>neovim</code></a>.</li>
<li>When describing below, I have grouped some relevant sections together for convenience. They may be spread around in the actual <code>.vimrc</code> file.</li>
<li>Latest version of my vim configuration can be found in the <a href="https://github.com/gaveen/vimfiles/blob/master/.vimrc"><code>.vimrc</code> of the git repo</a>, not this post.<br>
 </li>
</ul>
<hr>
<h2 id="a-few-useful-vim-concepts">A Few Useful Vim Concepts</h2>
<p>Before we begin, I would also like to quickly introduce you to a couple of key vim concepts I wish someone had explained to me much earlier.</p>
<p><strong>Vim has multiple modes.</strong> Vim is what you call a &lsquo;modal&rsquo; editor, which simply means vim has a few modes to work with.</p>
<p>As an analogy, think of a smartphone these days. There is a limited number of ways you can interact with it physically, but you have seemingly boundless amount of things you can do with it. For example, simple tap on the screen behaves differently based on which mode you are in. The singular touch input in this example can mean different interactions such as waking up the screen, unlocking, launching camera app, repositioning focal point, focusing on something, taking a photo, sharing a photo with someone, liking someone&rsquo;s photo in another app, etc. Based on the context (or mode, if you will), the same physical thing you do, can give different results.</p>
<p>Vim is somewhat like that. There is an <code>Insert Mode</code> where you can input text (i.g., typing) into the editor. There is a <code>Visual Mode</code> where you can select a section of text so that you visually track which selection of text you are taking actions on (e.g., copy selected text). Then there is the <code>Normal Mode</code> where you do everything else, such as moving around and manipulating text (e.g., cut, copy, paste, delete, etc.).</p>
<p>You can learn more about these modes and how you can enter/exit them, you can check the <a href="https://en.wikibooks.org/wiki/Learning_the_vi_Editor/Vim/Modes">Vim Wikibook</a>.</p>
<p><strong>Editing with Vim is like programming your text</strong>. Which is a roundabout way of saying that Vim has shortcut keys/key sequences. You can ask Vim to do simple actions or combine multiple instructions to do more complex actions, which can be intuitive once you learn the basics.</p>
<p>Since you are limited to interacting with a software using inputs devices in your computer, there are bound to be limits to what you can input. Vim works around this by having shortcut keys or key sequences. Notice how I said key &lsquo;sequences&rsquo; not &lsquo;combinations&rsquo;? Vim usually have shortcuts defined in such a way that you can press keys followed by other keys rather than press all of at once.</p>
<p>For example, pressing the letter <code>d</code> within the <code>normal mode</code> tells vim to &lsquo;delete&rsquo; the next character. If you want to delete the next 5 character, the instruction becomes <code>5d</code>. While <code>dw</code> deletes the next word, and <code>3dw</code> deletes the next 3 words; <code>dd</code> deletes the entire current line of text. <code>7dd</code> deletes 7 lines starting with the current. You get the idea.</p>
<p>If we take this a little further, you can say things like &ldquo;delete text up to the next occurrence of character <code>,</code> by pressing <code>dt,</code> in the <code>normal mode</code> of course. These actions can be repeated by pressing <code>.</code>, again while in <code>normal mode</code>. Want to change the text instead of deleting it? Replace the &rsquo;d&rsquo; with a &lsquo;c&rsquo; (e.g., <code>ct,</code>). Want to just select the text visually instead of both delete or change? Use &lsquo;v&rsquo; instead of &rsquo;d&rsquo; or &lsquo;c&rsquo; (e.g., <code>vt,</code>). You can also throw directionality into the mix by using <code>h, j, k, l</code> as arrow key alternatives.</p>
<p>The good thing is, you do not have to remember everything. You can build up the set of instructions with basic building blocks, entering one key press at a time. Sort of like conducting an orchestra, or like programming your text editing. Pretty neat, right?</p>
<p><strong>You can define your own shortcuts.</strong> Vim allows you to define your own shortcuts in a couple of different ways, some of which you will see below.</p>
<p>The key is that Vim allows you to prefix your keyboard shortcut sequences with a special key (called <code>leader</code> key), so that your own shortcuts will not conflict with inbuilt vim shortcuts.</p>
<p>Personally, I prefer to set shortcuts in what I think as &ldquo;the vim way&rdquo;. To explain it a bit further, I prefer to set shortcuts that do not break default vim features, at least logically adjacent to their inbuilt counterparts if there are any, and do not hamper muscle memory in the long run. You can see for yourself if the configuration below adhere to this within reason.</p>
<p><strong>Vim <code>buffers</code> are different editing spaces, whereas vim <code>tab pages</code> are not.</strong> &lsquo;Vim buffers&rsquo; are not to be confused with &lsquo;vim tab pages&rsquo; or &lsquo;vim windows&rsquo;.</p>
<p>A <code>buffer</code> in Vim is an editing space in memory. You can have a file already opened there, or you can save to a file later, or you can discard it. You can have multiple buffers open in a Vim instance.</p>
<p>A <code>window</code> in Vim is a view into a buffer. You can have a single window with a single buffer, or you can have multiple views (e.g., as horizontal/vertical screen splits, as standalone windows) into the same buffer. For example, you can split your screen area into two windows and view two different locations of a file you have opened. Just remember, the &ldquo;window&rdquo; mentioned here is a vim window (i.e., usually visible as a full-screen or a split-screen area)—not necessarily a graphical window like you are used to.</p>
<p>A <code>tab page</code> in Vim is a way to organized vim windows. Which means each tab page can have multiple vim windows (e.g., split windows). Therefore, you can have the same buffer viewed in more than one tab page too.</p>
<p>I know this can be confusing. You can see if the the following summary helps. Vim help <a href="https://vimhelp.org/windows.txt.html#windows-intro">summarizes this as</a>:</p>
<blockquote>
<p>A <code>buffer</code> is the in-memory text of a file. <br>
A <code>window</code> is a viewport on a buffer. <br>
A <code>tab page</code> is a collection of windows.</p>
</blockquote>
<p>Trying to use tab pages as different file editing spaces is a common mistake that can lead to confusing errors. If you are not sure about what to use, try <code>buffers</code> first since they are the primitive you need as editing spaces and you view them anyway in &lsquo;windows&rsquo;. If you think you need &rsquo;tab pages&rsquo;, you can introduce them into your workflow later.</p>
<p><strong>Vim is extensible with plugins.</strong> You can add features/functions not inbuilt by using plugins, which are programs written in <code>vimscript</code> or other programming languages. You will see below which plugins I am using.</p>
<p>To summarize these key concepts:</p>
<ul>
<li>Vim has multiple modes</li>
<li>Editing with Vim is like programming your text</li>
<li>You can define your own shortcuts</li>
<li>Vim <code>buffers</code> are different editing spaces, whereas vim <code>tab pages</code> are not</li>
<li>Vim is extensible with plugins<br>
 </li>
</ul>
<hr>
<h2 id="explaining-my-configuration">Explaining My Configuration</h2>
<p>These are built around the default vim installation environment found in the Fedora-family of Linux distributions (i.e., including Fedora*, CentOS, and Red Hat Enterprise Linux) because those are my usual work environments.</p>
<p>My .vimrc starts with some basic settings.
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=basic.vim"></script>
</p>
<p>With the comments accompanying them, these should be pretty self-explanatory. Most of these so some basic convenience-oriented settings or improve visual cues.</p>
<p>I should however mention the <code>set autowrite</code>. According to the vim documentation, <a href="https://vimhelp.org/options.txt.html#%27autowrite%27"><code>autowrite</code></a> can save the file on certain actions, even if you had not explicitly asked to save (i.e., &ldquo;write&rdquo; in vim terminology).</p>
<p>I like to avoid surprises like this as much as possible. However, <code>autowrite</code> is one of these very few exceptions I have left because it makes up in convenience. For example, it avoids the annoying &lsquo;unsaved content warning&rsquo; when switching between buffers. If you are not sure about this, you should probably avoid setting (i.e., enabling) it.<br>
 </p>
<hr>
<p> <br>
Next up is something that actually has an effect on the text you will be editing—how the <code>tab</code> character/key is handled.</p>
<p>I know how polarizing &ldquo;Tabs vs Spaces&rdquo; debate can be. Therefore, I will not get into it. I used to be in &rsquo;tabs&rsquo; camp in the very beginning, but I switched to using spaces instead of tabs where I can, mainly for the purpose of getting a reasonably consistent visual experience across different environments.</p>
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=tabs.vim"></script>

<p>I prefer to have 4 spaces per tab because most of the languages I work with these days (e.g., <a href="https://www.rust-lang.org/">Rust</a>) play nicely with that. The <a href="https://vimhelp.org/options.txt.html#%27smarttab%27"><code>smarttab</code></a> and <a href="https://vimhelp.org/options.txt.html#%27bs%27"><code>bs</code></a> settings help with backspace among other things when you use spaces instead of tabs. If you do not set these, using backspace to delete all the expanded tab characters would become tedious.</p>
<p>I also have set automatically enter spaces when I press the tab key with <code>set expandtab</code>. This is another potential pitfall you should note. If you do not want to expand into spaces, then avoid setting <a href="https://vimhelp.org/options.txt.html#%27expandtab%27">expandtab</a>.</p>
<p>Then there are some tools (e.g., Python and Go) which do not always handle spaces well when they expect tabs. For those you need to set exceptions. I have set a few exceptions for tab handling later in the configuration.<br>
 </p>
<hr>
<p> <br>
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=search.vim"></script>
</p>
<p>The comments here are pretty self explanatory. Something to remember is if you set <a href="https://vimhelp.org/pattern.txt.html#%2Fignorecase"><code>ignorecase</code></a>, case sensitivity is ignores across everywhere patters are used. This can lead to tricky situations when you use pattern search and replace type of actions. Therefore, I have left it disabled.<br>
 </p>
<hr>
<p> <br>
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=np.vim"></script>

<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=io.vim"></script>
</p>
<p>Most of the settings here are on non-printable characters. Therefore, they do not have an effect on the text you are editing, only acts as visual cues while you are in the editor.</p>
<p>The exception here is <a href="https://vimhelp.org/options.txt.html#%27autoindent%27"><code>autoindent</code></a>, which actually indents text automatically based on the indentation of the previous line. You can disable this by explicitly using <code>noautoindent</code> (i.e., disable temporarily by entering <code>:set noautoindent</code> in normal mode, or adding <code>set noautoindent</code> to .vimrc).</p>
<p>You do not need to use a mouse with vim—in fact, it is discouraged. But if you want to do useful things like scrolling at your speed while doing a visual inspection, and then click to go to somewhere, you can. While I love using vim, I also am not militant about being keyboard-only. There are times when adding a mouse into the mix—or more accurately, not rendering the mouse/touchpad useless—can be helpful when working with vim. This is why I enable mouse too.<br>
 </p>
<hr>
<p> <br>
Vim also has a GUI version, usually called <code>gvim</code>. It comes with an interface similar usual GUI programs, complete with things like toolbars, menubars, scrollbars, etc.</p>
<p>When I use gvim, I prefer to have a clean and simple windows, somewhat emulating what the terminal version looks like. If you prefer the GUI elements you can skip these settings.</p>
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=gvim.vim"></script>

<p>Again, these settings a explained in the comments.</p>
<p>Finding the name used by your preferred font and setting it permanently can be a little tricky. One easy way to do that is to:</p>
<ul>
<li>First, in normal mode of <code>gvim</code>, give <code>:set guifont=*</code> and hit enter. It will open the font selection dialog of your environment. The font you set this way is only temporary (i.e., until you close vim).</li>
<li>Once you make the preferred selection of font and size, in normal mode, give <code>:set guifont</code> and hit enter. It will show the used name of the font. You can use the name later in your .vimrc to set the font permanently. Note that you could use the escape character <code>\</code> before special characters such as spaces in the font name.</li>
</ul>
<p>In the example above, I have added &ldquo;Inconsolata-g&rdquo; font in &ldquo;Medium&rdquo; typeface at the size &ldquo;11&rdquo; points. If you want to set any other monospace font like <a href="http://mozilla.github.io/Fira/">Fira Mono</a>, <a href="https://adobe-fonts.github.io/source-code-pro/">Source Code Pro</a>, <a href="https://dejavu-fonts.github.io/">DejaVu Mono</a>, <a href="https://sourcefoundry.org/hack/">Hack</a>, etc., you can do so with <a href="https://vimhelp.org/options.txt.html#%27guifont%27"><code>guifont</code></a>. If you use vim in a terminal instead of gvim, then the font is inherited through terminal settings.<br>
 </p>
<hr>
<p> <br>
Next comes a very important setting, eventhough it is just one line.</p>
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=leader.vim"></script>

<p>As explained earlier, Vim lets you define your own shortcuts without risking conflicts with defaults, using a value called a &ldquo;leader&rdquo;—referred in .vimrc as <code>&lt;leader&gt;</code>. By default, the leader key is set to &ldquo;<code>\</code>&rdquo;. Due to the ease of reach, I prefer to set the leader key to be &ldquo;<code>,</code>&rdquo;. Therefore, when you see something like <code>&lt;leader&gt;y</code> it translated to <code>,y</code> in my setup.</p>
<p>Would this not conflict with inserting a comma?—you might wonder. There will be no conflict because you type in (i.e., insert) commas of your text in <code>insert mode</code> while you invoke shortcuts in <code>normal mode</code>.
 </p>
<hr>
<p> <br>
Next is another interesting part—plugin management. Vim also has an inbuilt plugin manager since version 8. However, I have not looked enough into it. Since my current setup works really well, I did not have a need to change it either.</p>
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=plugins.vim"></script>

<p>I use <a href="https://github.com/junegunn/vim-plug"><code>vim-plug</code></a> developed by Junegunn Choi, as the plugin manager. It is written in vim script, thus do not need external runtimes or complex manual installation steps. With &lsquo;vim-plug&rsquo; installing and keeping plugins up-to-date is a breeze.</p>
<p>Plugins are defined between the &lsquo;vim-plug&rsquo; invocations of <code>call plug#begin()</code> and <code>call plug#end()</code>. I pass the parameter <code>'~/.vim/bundle'</code> to <code>call plug#begin()</code> so that it know where to install my plugins. In this case, the parameter is a directory called <code>bundle</code> inside the main vim files directory <code>~/.vim</code>. I have it there because it is a leftover from the days when I used a different plugin manager.</p>
<p>I am not going to go one by one in this plugin list. However, as you can see above, I have grouped my plugins into a few areas such as:</p>
<ul>
<li>&ldquo;Augment Vim behavior&rdquo;</li>
<li>&ldquo;Augment UI elements&rdquo;</li>
<li>&ldquo;Augment filetype handling and syntax highlighting&rdquo;</li>
<li>&ldquo;Add utility&rdquo;</li>
<li>&ldquo;Add colorschemes&rdquo;</li>
</ul>
<p>Since all of my plugins are added via GitHub, you can find out more by visiting the relevant repository pages. To get the URL of each plugin repository page, append the name in the plugin definition after &ldquo;<code>https://github.com/</code>&rdquo;. For example, &ldquo;easymotion/vim-easymotion&rdquo; repository can be found at <a href="https://github.com/easymotion/vim-easymotion">&ldquo;https://github.com/easymotion/vim-easymotion&rdquo;</a>.</p>
<p>Some of the plugins here either need to be configured or can be configured. Some of the features enabled by these plugins, along with the shortcuts they introduce, are documented in the <a href="https://github.com/gaveen/vimfiles/blob/master/README.md"><code>README.md</code></a> file of <a href="https://github.com/gaveen/vimfiles">the git repo</a>.<br>
 </p>
<hr>
<p> <br>
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=generic.vim"></script>

<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=ft.vim"></script>
</p>
<p>I am again not going to explain the above any further because they are pretty self-explanatory with the help of included comments.</p>
<p>One thing to note is the section where I have included tab behaviour exceptions (e.g., for <a href="https://www.ruby-lang.org/">Ruby</a> and <a href="https://golang.org/">Go</a>) as I mentioned earlier. Some other exceptions are handled automatically by file type plugins.<br>
 </p>
<hr>
<p> <br>
If you look closely as the sections of the same <code>.vimrc</code> file I have been explaining so far, you will notice it has a syntax. As I mentioned earlier, Vim has an inbuilt scripting language. You can use this language to write custom functions which can make things easier for you by scripting them.</p>
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=func_diff.vim"></script>

<p>In the above example, there is a function with the name of &ldquo;<code>DiffWithSaved()</code>&rdquo; which combines inbuilt features of vim to find if there has been an changes since you last saved. If there are, it will present the differences between the last saved state and current state in a view similar to the Unix <code>diff</code>. Finally, it can be invoked with a command named &ldquo;<code>DiffSaved</code>&rdquo;.</p>
<p>I have defined a few more functions as well. Please note that <code>ToggleFullScreen()</code> function has an external dependency, an external program named <code>wmctrl</code>.</p>
<p><script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=func_qfix.vim"></script>

<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=func_fullscreen.vim"></script>
</p>
<p>While these functions define what to do, they are not automatically invoked. The way I have chosen to call them is via either shortcut keys or function keys.</p>
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=map_shortcuts.vim"></script>

<p>You can see that in the above, <code>DiffSaved</code> and <code>QuickfixToggle()</code> are configured to be invokes with <code>&lt;leader&gt;?</code> and <code>&lt;leader&gt;q</code> respectively. As per my configuration, this translated into pressing <code>,?</code> and <code>,q</code> respectively.</p>
<p><script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=map_cp.vim"></script>

<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=map_misc.vim"></script>
</p>
<p>I have mapped some useful shortcuts to deal with cut/copy/paste with clipboard in <code>gvim</code>. These complement the inbuilt <code>x</code>, <code>y</code>, <code>p</code> for cut/copy/paste respectively, but for external clipboard (e.g., OS clipboard). I also have <code>&lt;leader&gt;v</code> (i.e., <code>,v</code>) to select the text that was pasted into vim, right after it was pasted.</p>
<p>In addition to custom shortcut keys, I have also mapped some of the function keys (e.g., F1 - F12 keys in the keyboard) to do useful things.</p>
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=map_fkeys.vim"></script>

<p>You might notice that the convention I use is: function key mappings only change editor environment, whereas anything that affect the actual text are mapped as shortcuts with a &ldquo;leader&rdquo; prefix.</p>
<p>In the above, I have essentially remapped F1 key as another <code>ESC</code> key to avoid potential accidental F1 key presses when reaching <code>ESC</code>. F4 toggles spellchecking, F7 uses <code>junegunn/limelight.vim</code> plugin, and F11 calls the above mentioned <code>ToggleFullScreen()</code> function. The rest should be self-explanatory.</p>
<p>I also have a shortcut for when you edit a file away, but forgot you needed <code>sudo</code> privileges to save it. Instead of pulling your hair out and starting from scratch, there are things you can do. The following makes one of those things even more convenient to use (i.e., instead of using <code>:w</code> to save, type <code>:w!!</code> to save with &lsquo;sudo&rsquo; privileges).
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=sudo.vim"></script>

 </p>
<hr>
<p> <br>
I mentioned earlier that <code>buffers</code> are the way to go when you need to keep multiple files open. The following section of the settings map a few shortcut keys to make switching between buffers faster.</p>
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=buffers.vim"></script>

<p>In addition, I have also configured the plugin <a href="https://www.vim.org/scripts/script.php?script_id=1664"><code>buftabs</code></a> here. It shows which files you have opened at the bottom of the vim window. You can not point and click it to switch between buffers, but rather provides a minimalist indication of opened buffers and statuses.<br>
 </p>
<hr>
<p> <br>
Finally, we have the exciting part—colorscheme! The first two lines <code>termguicolors</code> and <code>background</code> set two values explicitly rather than try to derive them from the environment.</p>
<script type="application/javascript" src="https://gist.github.com/gaveen/4d32d0200ae49c0489be44d8cbf21cfc.js?file=colorscheme.vim"></script>

<p>My <code>termguicolors</code> setting explicitly says that the terminal you are using supports GUI colors. It does in my case because most of the time I use <a href="https://gitlab.gnome.org/GNOME/gnome-terminal">GNOME Terminal</a> which comes with <a href="https://getfedora.org/">Fedora</a>. If your terminal does not support GUI colors, then do not set this.</p>
<p>My <code>background</code> setting is to make my terminal background dark. Like many people who need to stare at a screen for a long time, I too prefer dark themes whenever I have the option. Some colorschemes select between dark and light versions based on this value, which is why I have made &lsquo;dark&rsquo; explicit. If you prefer light, you can set it to &rsquo;light&rsquo; too.</p>
<p>If you do not need either of these two, then you should not set them because some colorschemes would look weird if you set the values different from what they are expecting or capable of handling.</p>
<p>With those out of the way, I finally set a colorscheme. My colorscheme of choice have changed overtime. These days, I prefer a theme called &ldquo;<a href="https://github.com/rakr/vim-one">One</a>&rdquo; which has both a light and dark version (picked based one the <code>background</code> setting).</p>
<p>The end result should look something like <a href="https://i.imgur.com/lETk5yt.png">this (screenshot on Imgur)</a>.<br>
 </p>
<hr>
<p> <br>
That is about it for this post. Since it is already long, I did not try to include further details such as what the plugins do or which shortcuts they introduce. If you would like to hear about these details—or just wanted to give me your comments—please let me know via <a href="mailto:gaveen@gaveen.me?Subject=%5BComment%5D%20gaveen.me%20-%20My%20Vim%20Story">email</a> or <a href="https://twitter.com/gaveen/">@s/DMs</a>.</p>
<p><em>PS:</em> I also re-posted this in <a href="https://dev.to/gaveen/my-vim-story-594d">dev.to</a> where it gained a significant amount of interest (<em>e.g.,</em> featured in the weekly &ldquo;must-reads&rdquo; list). Since this meant a lot more people read it there, the dev.to re-post is now another place where you can join the conversation. But this post remains the canonical source.</p>
]]></content>
        </item>
        
        <item>
            <title>Curtain call: Jayalath Manorathna</title>
            <link>https://gaveen.me/2020/01/curtain-call-jayalath-manorathna/</link>
            <pubDate>Sun, 12 Jan 2020 22:00:00 +0530</pubDate>
            
            <guid>https://gaveen.me/2020/01/curtain-call-jayalath-manorathna/</guid>
            <description>There are some moments in life you lucidly remember, when the gears of cause and action in a chaotic universe turn, something clicks into place, and your life changes forever. If you are lucky—like I was—the changes it brings about can be good and profound.
Somewhere in late &amp;rsquo;90s I was a teenager trying to traverse self-expression, while trying to balance creative life and &amp;hellip;life. It was not a fight I felt was going my way.</description>
            <content type="html"><![CDATA[<p>There are some moments in life you lucidly remember, when the gears of cause and action in a chaotic universe turn, something clicks into place, and your life changes forever. If you are lucky—like I was—the changes it brings about can be good and profound.</p>
<p>Somewhere in late &rsquo;90s I was a teenager trying to traverse self-expression, while trying to balance creative life and &hellip;life. It was not a fight I felt was going my way. In one such humid evening, I found myself sitting in the main hall of our school with a few friends, watching a &lsquo;stage drama&rsquo;—which is what a traveling theater production is called locally—named &ldquo;ගුරු තරුව&rdquo;.</p>
<p>Looking back, I remember the play was introduced as a semi-documentary, with a plot vaguely similar to <a href="https://en.wikipedia.org/wiki/Dead_Poets_Society">Dead Poets Society</a>. While the plot was straight forward with a sprinkling of sociopolitical commentary, the play was a celebration of literature, arts, folk songs, etc. through and through. It was full of songs, dance, and recitals referring to works ranging from local folk songs, classical poems to translations of <a href="https://en.wikipedia.org/wiki/Chief_Seattle">Chief Seattle&rsquo;s speech</a>, and foreign literature.</p>
<p>The punch came, with a subtle happy ambiance music. A character of a student recited a passage from a masterful translation of Konstantin Paustovsky&rsquo;s &ldquo;The Golden Rose&rdquo;.</p>
<blockquote>
<p>&ldquo;ගෙවෙන සෑම නිමේෂයක්, නොසිතා බිණූ වදනක්, හෙලූ බැල්මක්, නොදැනෙන සේ ගැහෙන මිනිස් හද ගැස්මක්, පොප්ලර් ගසකින් පතිත වන මටලු රේණුවක්, ගෙදිගු විලෙක දිලිසෙන තරු කිරණ කණිකාවක්, මේ සියල්ලම රන් සුණු ය. ලේඛකයින් වන අපි චිරාත් කාලයක් යටි හිතෙන් මෙවැනි අනන්ත අප්‍රමාණ රන් සුණු අවුලමු. අවුලා දිනෙක ඒවා ගෙන එකට තලා අපගේම රන් රෝස මලක් නිමවනතෙක් තැන්පත්කොට තබාගෙන සිටිමු. ඒ රන් රෝස මල කථාන්තරයක්, නවකථාවක්, හෝ නැතහොත් කවක් විය හැකි ය. සාහිත ශ්‍රොතස උපදින්නේ මේ අගය නොමිණිය හැකි රන් සුණුවලිනි.&rdquo;</p>
</blockquote>
<p>In other words, of all the places I could be that time and day, I got to experience an actor read from the script of a play written by playwright/master actor Jayalath Manorathna, paraphrasing a passage from a book by poet/writer Ariyawansha Ranaweera, which was itself a translation of a book by writer Konstantin Paustovsky, which in turn was referring to a journal entry of an unnamed writer who heard the story of a Paris dust sweeper named Jean Erneste Chamette from a jeweler.</p>
<p>By experiencing that recital, I was deeply moved. At the time, I did not know what that book was, but I immediately wanted it in my life. Until I found the book, all I had to go with was the few words I recalled. Luckily, the play was semi-documentary and mentioned what the book was. Following that day, I frequented bookshops until I found a copy of that book, ultimately by chance, and the rest is my personal history.</p>
<p>For those who do not read Sinhala, here is the paraphrasing from the original writing:</p>
<blockquote>
<p>&ldquo;Every minute, every chance word and glance, every thought—profound or flippant—the imperceptible beat of the human heart, and, by the same token, the fluff dropping from the poplar, the starlight gleaming in a pool—all are grains of gold dust. Over the years, we writers subconsciously collect millions of these tiny grains and keep them stored away until they form a mould out of which we shape our own particular golden rose—a story, novel, or poem. From these precious particles a stream of literature is born.&rdquo;</p>
</blockquote>
<p>To say the least, this was the instance that set me firmly in the path of literature and writing. I used to write before, but this was the confluence that set me on my current path in terms of art/literature. It all came about thanks to Mr. Jayalath Manorathna. Mr. Manorathna had made his golden rose and it did bring about happiness to me.</p>
<p> </p>
<hr>
<p> </p>
<p>I am not going to repeat what had already been said about him and what will be said in the coming days—more eloquently and by far more eminent people. I do not have to remind Sri Lankans that he was one of the finest actors our country ever produced.</p>
<p>This note is very personal. I aim to be humble. To me, Jayalath Manorathna was a great teacher (&ldquo;ගුරු තරුව&rdquo;) that I never had. If there is nothing else, I want to tell that there is at least one life he influenced for the better through his art.</p>
<p>I do, in fact know that I am not the only one. A couple of those friends I mentioned in the beginning actually called me today. One called me in the morning to break the news and share the sorrow. Mr. Manorathna was a celebrity, and we have never met him in person. But, the news of his passing felt like if someone we knew well had gone far away, never to come back. Another friend just finished a long phone call where we were reminiscing about old times and that particular show of the play.</p>
<p>I could go on, but what more can I say? Mr. Manorathna has left, he will not be back. I feel profoundly of the utter finality of his passing. I can only be thankful that I, in this immense chaotic span of space and time, got to experience his work and enjoy them. This too, shall shine among my grains of gold dust.</p>
<p> </p>
]]></content>
        </item>
        
        <item>
            <title>I don&#39;t believe in Kubernetes</title>
            <link>https://gaveen.me/2019/12/i-don-t-believe-in-kubernetes/</link>
            <pubDate>Sun, 01 Dec 2019 06:00:00 +0530</pubDate>
            
            <guid>https://gaveen.me/2019/12/i-don-t-believe-in-kubernetes/</guid>
            <description>I have always been a believer in Cloud Computing. Even when big executives of the world were calling it a fad, I believed in the cloud—or its promise. It was not so much an achievement to be had—rather as with to so many other people in tech—it spoke to me from a place of understanding. We may not have called it &amp;ldquo;cloud&amp;rdquo;, but when Amazon opened the gates of their Web Services to everyone, we saw good things we recognized with and we realized it was an opportunity to build things better.</description>
            <content type="html"><![CDATA[<p>I have always been a believer in <a href="https://azure.microsoft.com/en-us/overview/what-is-cloud-computing/">Cloud Computing</a>. Even when big executives of the world were calling it a fad, I believed in the cloud—or its promise. It was not so much an achievement to be had—rather as with to so many other people in tech—it spoke to me from a place of understanding. We may not have called it &ldquo;cloud&rdquo;, but when Amazon opened the gates of their Web Services to everyone, we saw good things we recognized with and we realized it was an opportunity to build things better.</p>
<p>Cloud Computing was about getting good IT infrastructure accessible to the rest of us. Finally, we did not need to be a sizeable enterprise or have a small army of ops and devs just to have the necessary infrastructure in place. It was empowering, it was enabling. When cloud users could solve their problems conveniently, people interested in cloud infrastructure could enjoy building them—and in the process, change many professions and how the industry worked.</p>
<p> </p>
<hr>
<p> </p>
<p>After achieving the cloud, our mission should have been to make cloud computing accessible to more and more people. We dreamt of people having on-demand access to all the IT resources they want at an ever reducing cost, being able to use technology easily and conveniently to solve problems they needed solving. That, should have been our mission.</p>
<p>Instead, here we are today left fixated on things like Kubernetes<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup> and trying to emulate how giant companies—so called hyperscalers—like Google and Facebook operate their infrastructure. Instead of trying to get people closer to solving their problems, we are effectively erecting newer barriers in complexity.</p>
<p> </p>
<hr>
<p> </p>
<p>To be clear, I am not trying to diss <a href="https://kubernetes.io/">Kubernetes</a>. I like Kubernetes—with certain caveats. It is a system with many components and—as with any complex system—comes with inherent operational complexities. It is an interesting system catering specific needs. It has its place. More accurately, Kubernetes is a tool for cloud builders, not cloud consumers.</p>
<p>A problem with the current <a href="https://www.cncf.io/">Cloud Native</a> narrative is that a lot of companies (and in turn, a significant amount of eco system resources), who would otherwise be working with a consumer focus are busy with building tools for cloud builders—and then try to wrestle these into submission as cloud consumer technologies. You do not have to take my word for it—you can try deploying your next application to production on Kubernetes.</p>
<p>What happened to bringing the best technology conveniences to the rest of us? Whatever happened to harnessing the power of IT so that it stops being an inhibitor and becomes the great enabling force that it can be? What happened to—may Cthulhu have mercy on my soul—powering &ldquo;digital transformation&rdquo;?</p>
<p> </p>
<hr>
<p> </p>
<p>When the most activity in tech is taking place on a tangent, it is refreshing to see ventures like <a href="https://oxide.computer/">Oxide Computer Company</a> daring to pause and ask fundamental questions again. In their case—at least from what I can gather at this point—they are tying to bring the advantages of hyperscale IT infrastructure because the hardware industry seem to have forgotten the rest of us in favor of the hyperscalers.</p>
<p>As for me, I want modern, secure, cost-effective computing to be delivered to more and more people because our industry seem to have forgotten that along with the fixation on hyperscale. I do of course believe in the existence of Kubernetes. I just do not believe it is the thing that carries the mission forward—at least not in the current form. This definitely is something I would like to work on. It had always been my interest. At different times, in different places, in different forms—it had always been the mission.</p>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p><strong>PSA</strong>: Containers ≠ Docker ≠ Kubernetes&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>
]]></content>
        </item>
        
        <item>
            <title>The future of networking is software</title>
            <link>https://gaveen.me/2019/10/the-future-of-networking-is-software/</link>
            <pubDate>Tue, 01 Oct 2019 06:00:00 +0530</pubDate>
            
            <guid>https://gaveen.me/2019/10/the-future-of-networking-is-software/</guid>
            <description>I believe the future of networking is software. To be a little more specific on my thoughts, I believe the future of networking in the data center is software-based. Water is wet, and on that note, thank you for coming to my TED talk. And, quick PS: clouds are also hosted in data centers.
While what I just mentioned maybe obvious to say—given how pretty much everything has its future in software—you would be surprised at the state of the networking industry if you came to it as an outsider.</description>
            <content type="html"><![CDATA[<p>I believe the future of networking is software. To be a little more specific on my thoughts, I believe the future of networking in the data center is software-based. Water is wet, and on that note, thank you for coming to my TED talk. And, quick PS: clouds are also hosted in data centers.</p>
<p>While what I just mentioned maybe obvious to say—given how pretty much everything has its future in software—you would be surprised at the state of the networking industry if you came to it as an outsider. The cloud has already happened and compute has embraced it with both arms,&hellip; and legs, and tentacles, and whatever else you have available. Storage is also not too far behind. Cloud-scale storage technologies are becoming closer and closer to being commoditized<sup id="fnref:1"><a href="#fn:1" class="footnote-ref" role="doc-noteref">1</a></sup>. Network—in a way—is the last frontier in the data center not yet fully subscribing to cloud ethos.</p>
<p>Things are certainly changing—more on that later. But, networking vendors are still trying to sell you pricey switches, they are only just now getting serious about DevOps, and their idea of a software-defined network (SDN) is to run a bunch of software on top of their existing traditional network solution stack (i.e., <a href="https://en.m.wikipedia.org/wiki/Application-specific_integrated_circuit">ASIC</a>-driven expensive boxes + mostly-blackbox <a href="https://en.m.wikipedia.org/wiki/Network_operating_system">NOS</a>/firmware + ridiculous licensing + exorbitant professional services + consultancy that makes sure you stay with them).</p>
<p>Forgive me for sounding cynical, I am not. I think things should be better though. To that end, let me share a few things and sort-of-predictions I believe of the future, at least at this point in time. However—fair disclaimer—I may have a vested interest in this game. Therefore, take whatever beyond this point as however you will.</p>
<p> </p>
<hr>
<p> </p>
<p>I believe the future of networking—at least, networking in the data center—is in software. Networking in general is gradually heading that way. Telco industry has learned from what happened with the &ldquo;cloud fad&rdquo;, and are trying to move towards NFV<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup>, SDN<sup id="fnref:3"><a href="#fn:3" class="footnote-ref" role="doc-noteref">3</a></sup>, and SD-WAN<sup id="fnref:4"><a href="#fn:4" class="footnote-ref" role="doc-noteref">4</a></sup> already. But let me focus on the data center (and in turn, cloud), which has been <a href="https://gaveen.me/mind-the-air-gap">my work domain</a> for a while.</p>
<p>I believe that the enablers of this shift will be multi-fold. For example network virtualization<sup id="fnref:5"><a href="#fn:5" class="footnote-ref" role="doc-noteref">5</a></sup> and network functions virtualization<sup id="fnref:2"><a href="#fn:2" class="footnote-ref" role="doc-noteref">2</a></sup> are precursors, and they have already been here for a while. Also, network equipment supporting alternative NOSs have been here for a while. For example, some brand vendors like Mellanox and Dell EMC—as well as whitebox switch vendors—support multiple OSs such as generic Linux, Cumulus, Open Network Linux, SONiC, along their own OSs on their switches.</p>
<p>I believe the next wave of convergence will incorporate networking into already converged compute and storage. For the lack of a better term—and in line with the buzzword-based naming (e.g., CI<sup id="fnref:6"><a href="#fn:6" class="footnote-ref" role="doc-noteref">6</a></sup>/HCI<sup id="fnref:7"><a href="#fn:7" class="footnote-ref" role="doc-noteref">7</a></sup>)—let us call it Fully-Converged Infrastructure (FCI). If and when this becomes a reality, it is likely that it will co-exist with existing types of infrastructure—similar to how HCI/CI still remain somewhat of niche markets. However, if this comes to pass with significant enough adoption, it will be a salient indicator that the balance has been tipped from hardware to software.</p>
<p>In any case, I believe there will be a significant shift in direction from specialized hardware-based switch/network appliances to <strong>software-based networking on generic computing platforms</strong>.</p>
<p>I am not sure how the gap will be bridged exactly. Perhaps, x86 server-based networking will become more powerful to catch up to ASIC/<a href="https://en.m.wikipedia.org/wiki/Field-programmable_gate_array">FPGA</a>-accelerated networking. Perhaps, network appliance hardware will become generic open platforms. Perhaps, ASICs and FPGAs will become increasingly generic till they become commodity components in generic computing. Perhaps, it will be somewhere in between.</p>
<p>We already see some precursors in the evolution of the hardware aspect. For example, x86-based switches are now commonplace, while some ASICs are becoming more and more in the territory of generic platforms<sup id="fnref:8"><a href="#fn:8" class="footnote-ref" role="doc-noteref">8</a></sup>.</p>
<p>Software in the networking industry on the other hand, had been a little more nimble. While proprietary software stacks of traditional vendors have been evolving further, there also has been an interest to consolidate effort on the common components. For example, <a href="https://www.lfnetworking.org/">Linux Foundation Networking</a> and <a href="https://www.opennetworking.org/">Open Networking Foundation</a> has received contribution from even the bigger network vendors such as Cisco, Arista, Juniper, and Mellanox. This has resulted in the development or improvement of interesting open source technologies such as <a href="https://www.dpdk.org/">DPDK</a>, <a href="https://www.opennetworking.org/p4/">P4</a>, <a href="https://fd.io/">VPP</a>, <a href="https://azure.github.io/SONiC/">SONiC</a>, <a href="https://www.opennetworking.org/stratum/">Stratum</a>, etc. Open source-based as well as proprietary vendor OSs<sup id="fnref:9"><a href="#fn:9" class="footnote-ref" role="doc-noteref">9</a></sup> also have been available in the market.</p>
<p>The physical networking (e.g., fiber/copper infrastructure, optical transceivers, cables, connectors, etc.) components are likely to remain and continue to evolve in traditional / proprietary supply chains as they involve physical fabrication, manufacturing, and other logistics.</p>
<p>But the non-physical side of networking space (e.g., which contains processing, forwarding, routing/switching decisions, protocols, virtual endpoints, segmentation / micro-segmentation, policy frameworks, telemetry / observability, etc.) will get much more interesting. I am not saying traditional networking equipment will become obsolete in a hurry. But I believe building networks with generic computing platforms that are at least akin to x86 servers of today—perhaps augmented with FPGAs or ASICs—will at least become a mainstream option to ops teams. These networking infastructure will largely be handled by the software they are running.</p>
<p>With cloud computing<sup id="fnref:10"><a href="#fn:10" class="footnote-ref" role="doc-noteref">10</a></sup> becoming a mainstay—along with all the shifts in thinking it brings—networking is due for a re-imagining. While the body of domain knowledge, standards, abstractions, and even expertise can be reused, I believe that the traditional thinking such as the ones that involve believing in different switch boxes for different places<sup id="fnref:11"><a href="#fn:11" class="footnote-ref" role="doc-noteref">11</a></sup> in the network is—IMHO—antiquated and only serve to drive network vendor sales.</p>
<p>Application-aware <a href="https://en.wikipedia.org/wiki/OSI_model">Layer 4 - Layer 7</a> software systems are already starting to do <a href="https://www.infoq.com/podcasts/open-source-cilium-security/">pretty-cool things</a><sup id="fnref:12"><a href="#fn:12" class="footnote-ref" role="doc-noteref">12</a></sup>. However, Layer 2 - Layer 3 networking that enables them—as well can further empower them—are yet to catch up to the future that is already dawning.</p>
<p>And, I believe it is going to be awesome to build.</p>
<section class="footnotes" role="doc-endnotes">
<hr>
<ol>
<li id="fn:1" role="doc-endnote">
<p>e.g., <a href="https://ceph.io/">Ceph</a>, <a href="https://min.io/">MinIO</a>, etc.&#160;<a href="#fnref:1" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:2" role="doc-endnote">
<p><a href="https://www.sdxcentral.com/networking/nfv/definitions/whats-network-functions-virtualization-nfv/">Network Functions Virtualization</a> (e.g., OPNFV)&#160;<a href="#fnref:2" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:3" role="doc-endnote">
<p><a href="https://www.sdxcentral.com/networking/sdn/definitions/what-the-definition-of-software-defined-networking-sdn/">Software-Defined Networking</a>&#160;<a href="#fnref:3" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:4" role="doc-endnote">
<p><a href="https://www.sdxcentral.com/networking/sd-wan/definitions/software-defined-sdn-wan/">SD-WAN</a>&#160;<a href="#fnref:4" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:5" role="doc-endnote">
<p><a href="https://en.m.wikipedia.org/wiki/Network_virtualization">Network Virtualization</a> (e.g., VMware NSX)&#160;<a href="#fnref:5" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:6" role="doc-endnote">
<p><a href="https://en.m.wikipedia.org/wiki/Converged_infrastructure">Converged Infrastructure</a>&#160;<a href="#fnref:6" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:7" role="doc-endnote">
<p><a href="https://en.m.wikipedia.org/wiki/Hyper-converged_infrastructure">Hyperconverged Infrastructure</a>&#160;<a href="#fnref:7" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:8" role="doc-endnote">
<p>Competing vendors like Arista and Cisco use the same Broadcom ASIC silicon series (e.g., Tomahawk, Trident, Jericho) in some of their comparable switches.&#160;<a href="#fnref:8" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:9" role="doc-endnote">
<p>e.g., Cumulus Networks, Big Switch Networks, and Pluribus Networks&#160;<a href="#fnref:9" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:10" role="doc-endnote">
<p>Cloud Computing and its inner aspects such as public/hybrid clouds, Cloud Native Infrastructure, etc. has become a mainstay in the industry, and continue to influence the thinking in adjacent areas of technology.&#160;<a href="#fnref:10" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:11" role="doc-endnote">
<p>Either talking in terms of older core/aggregation/access switch classification or the newer spine/leaf classification, is still hinged on the fact that these switches are usually built for different purposes with different limitations and capabilities. However, if everything is software, running on sufficient compute power, and necessary physical connectivity, there will not be much technical justification why one of your switches cannot be a core switch while another is orders of magnitude more expensive than the previous one.&#160;<a href="#fnref:11" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
<li id="fn:12" role="doc-endnote">
<p>Layer 4 - 7 software options include cloud-native software such as <a href="https://cilium.io/">Cilium</a>, Service Mesh software (e.g., <a href="https://www.envoyproxy.io/">Envoy</a>/<a href="https://istio.io/">Istio</a>, and <a href="https://linkerd.io/">Linkerd</a>), etc.&#160;<a href="#fnref:12" class="footnote-backref" role="doc-backlink">&#x21a9;&#xfe0e;</a></p>
</li>
</ol>
</section>
]]></content>
        </item>
        
        <item>
            <title>We are on our own</title>
            <link>https://gaveen.me/2019/04/we-are-on-our-own/</link>
            <pubDate>Mon, 22 Apr 2019 06:00:00 +0530</pubDate>
            
            <guid>https://gaveen.me/2019/04/we-are-on-our-own/</guid>
            <description>I&amp;rsquo;m early to work, because the roads are mostly empty. That&amp;rsquo;s not because of an extended holiday season. No, that finished last week. People are trying to stay home because of the Easter Sunday Attacks—they are uncertain where to go from here.
As I type these words away, I&amp;rsquo;m but a walking distance away from Mahawela Gardens, where one gruesome episode of Sunday&amp;rsquo;s events took place. I also hear stories in the background about colleagues who have lost family members.</description>
            <content type="html"><![CDATA[<p>I&rsquo;m early to work, because the roads are mostly empty. That&rsquo;s not because of an extended holiday season. No, that finished last week. People are trying to stay home because of the <a href="https://roar.media/english/life/in-the-know/easter-sunday-explosions-in-sri-lanka/"><em>Easter Sunday Attacks</em></a>—they are uncertain where to go from here.</p>
<p>As I type these words away, I&rsquo;m but a walking distance away from Mahawela Gardens, where one gruesome episode of Sunday&rsquo;s events took place. I also hear stories in the background about colleagues who have lost family members. I think back to Sunday, as it unfolded, I remember holding my baby tightly in my arms while my mind kept repeatedly asking for his forgiveness for the world that we have created for his generation.</p>
<p>There&rsquo;s no point of leaving yet another anecdote of the terror that took the lives of at least 259 people (including both Sri Lankans and friends of Sri Lanka) and left twice as many injured. They attacked places of worship, they attacked hotels. Even before anything came to light, most of the Sri Lankans knew what it was—terrorism. They knew it because they have experienced it before, and in less than a decade it had come to haunt them again—perhaps with a new face and a carrier—yet, terrorism.</p>
<hr>
<p> </p>
<p>We don&rsquo;t know where to go from here. People are hurt, they are asking why, where did this hate come from, whom does it serve—all serious questions. And our leaders, our political leaders&hellip;</p>
<p>I don&rsquo;t need to repeat what&rsquo;s been said and done by our politicians. They have provided ample evidence that they don&rsquo;t have the country&rsquo;s best interest. One of the most painfully obvious disillusionments came towards the end of last year when political factions enacted a political drama—the blatant lie that they called public service.</p>
<p>When <a href="https://en.wikipedia.org/wiki/Christchurch_mosque_shootings">Christchurch</a> happened merely a month ago, we saw how Prime Minster Jacinda Ardern held her nation in a gentle embrace, whispering words of comfort into their ears.</p>
<p>What we have instead is a bunch of politicians bickering as to whom should accept more blame, shamelessly claiming knowledge of prior-warning—trying to wipe their hands clean. We have leaders callously smirking in press conferences while a country mourn. We have leaders disgustingly trying to capitalize on this tragedy. We have leaders acknowledging there were prior-warnings, but they didn&rsquo;t think this would come to pass. I can go on, but you already know this. Sri Lanka has come so far in spite of politicians, not because of them.</p>
<p>Extreme fundamentalist indoctrination—especially to the point where they would commit suicide bombing—does not happen over night. Even after finding a huge cache of explosives and terror intent, Sri Lanka wasn&rsquo;t ready—the attacks came as a shock. To the general public, that is. The politicians from both sides of the aisle, had been warned and had stayed away.</p>
<p>As we trek the treacherous terrains of terrorism, let us not forget that we are alone, together as one people of Sri Lanka. Just as we couldn&rsquo;t rely on our politicians for other things like transportation and electricity—we can&rsquo;t rely on them to heal this situation with the gravity and aptitude it needs. Most of the world has already delivered their condolences and moved on. All Sri Lankans are in this together—hopefully not entirely alone.</p>
<p>Racist sentiments are flowing again, and in the hurt and pain, the crowds may not see nuances—such as that an entire ethnicity or a religious group isn&rsquo;t accountable for the ill deeds of a few. Fortunately, at least some people have learned lessons from the past—such as the Black July. Just as an entire religious group isn&rsquo;t accountable for the acts of a few terrorists, let us remember that an entire country should not be complicit in the acts of a few racists.</p>
<p>Remember the names and faces of all the politicians who have failed us—you know what to do when you get to cast your votes. Just as you help to quell the flames of extremism, help protect the communities—all the communities. Stay vigilant. Because we, my friend, are on our own—let us keep each other safe.</p>
]]></content>
        </item>
        
        <item>
            <title>I thought I knew</title>
            <link>https://gaveen.me/2019/04/i-thought-i-knew/</link>
            <pubDate>Sat, 20 Apr 2019 06:00:00 +0530</pubDate>
            
            <guid>https://gaveen.me/2019/04/i-thought-i-knew/</guid>
            <description>I thought I knew how being a father would be. I have a father, a good one. I understood that much. I have nephews and nieces, and I love them to bits. I understood that much. So when we become pregnant, I thought I had a pretty strong grip on how being a parent felt.
I knew I wasn&amp;rsquo;t nearly ready as I wanted to be, but I didn&amp;rsquo;t think I had a big gap of understanding on how a father felt about their child.</description>
            <content type="html"><![CDATA[<p>I thought I knew how being a father would be. I have a father, a good one. I understood that much. I have nephews and nieces, and I love them to bits. I understood that much. So when we become pregnant, I thought I had a pretty strong grip on how being a parent felt.</p>
<p>I knew I wasn&rsquo;t nearly ready as I wanted to be, but I didn&rsquo;t think I had a big gap of understanding on how a father felt about their child. I had experienced a large swath of the human emotion spectrum, and I&rsquo;ve gathered a lifetime of experiences leading to that point. So, I thought I knew how being a father would feel.</p>
<p>And then, I became a father. Just like the flipping of a switch, everything was turned to 11.</p>
<p>My ears wanted to hear every single sound my son made, my eyes didn&rsquo;t want to rest so that I may not miss a single movement of his tiny limbs. I was fiercely protective of him from the every so slight change in the environment surrounding him. It was like a primal instinct had awakened in me. I could feel my rage burn wild, even at the slightest perceived discomfort the hospital staff caused him. The days were like a blur, and I was physically tired  from the things that were happening—such as cleaning the home vigorously in preparation of his arrival. But I felt the most awake at the same time.</p>
<p>There was suddenly a big, wide world full of things that really didn&rsquo;t understand how fragile a baby is. There was a world full of billions and billions of people who didn&rsquo;t feel exactly the same caring love as his mother and I were carrying. Just like the flipping of a switch, everything was turned to 11. I went into what I imagine was a primal urge to protect your own.</p>
<p>It&rsquo;s been a few months since then. I&rsquo;ve calmed down quite a bit—less of that primal rage. But that wakefulness never went away. I&rsquo;ve come to accept that the part of me that awakened is here to stay. I also feel the calmest when my son is firmly in my arms and he cuddles to find a comfortable position. I guess that&rsquo;s part of being a father. I&rsquo;m guessing, continuously learning to be a father is also part of being a father too. But, I&rsquo;ve become a father nonetheless.</p>
]]></content>
        </item>
        
        <item>
            <title>Whatever happened to that book?</title>
            <link>https://gaveen.me/2019/04/whatever-happened-to-that-book/</link>
            <pubDate>Sun, 14 Apr 2019 06:00:00 +0530</pubDate>
            
            <guid>https://gaveen.me/2019/04/whatever-happened-to-that-book/</guid>
            <description>Today is the Sinhala (and Tamil) New Year day. As I sit in front of the computer to partake in my trade—as one does according to tradition—I want to try an answer a certain question.
Whatever happened to that book you were writing?—is not a question I have been asked too many times. You see, I am not a well-known writer at all—but I digress. I have in fact, been working for a while on at least two, maybe two and a half books—none of which are actually ready yet.</description>
            <content type="html"><![CDATA[<p>Today is the Sinhala (and Tamil) <a href="https://en.wikipedia.org/wiki/Sinhalese_New_Year">New Year</a> day. As I sit in front of the computer to partake in my trade—as one does according to tradition—I want to try an answer a certain question.</p>
<p>Whatever happened to that book you were writing?—is not a question I have been asked too many times. You see, I am not a well-known writer at all—but I digress. I have in fact, been working for a while on at least two, maybe two and a half books—none of which are actually ready yet.</p>
<ul>
<li>an untitled poetry book <em>(in Sinhala)</em></li>
<li>an untitled sci-fi novel <em>(in English)</em></li>
<li>an untitled poetry <em>maybe</em> chapbook <em>(in English)</em></li>
</ul>
<p>If—for whatever unfathomable reason—you wish to know more about what has been happening with these, you might like this update. Let me start with what is closest to being complete.</p>
<p> </p>
<hr>
<h1 id="untitled-poetry-book-sinhala">Untitled poetry book (Sinhala)</h1>
<p>Eventhough I work in technology—and am very passionate about that—there are other aspects of my life. One of those involves poetry, to the point I would say I am as much poet as I am geek.</p>
<p>Taking quite a bit of liberty with the term &ldquo;poetry&rdquo;, I have been writing poetry since I was in grade school. More importantly, I always felt free the most when I was left in my mind to mind my own. Given a pen and a blank page—like many that came before me—I turned to writing, and poetry was my first choice of a medium.</p>
<p>Somewhere, roughly around fifteen years ago, I naively thought I had enough poems to compile into a book. While I did not have any need of getting published—just a dream—I just wanted to put things into a form.</p>
<p>To make a long story short, fifteen years is a long time—specially if you are practising a form of art. I definitely am not the same person I used to be—nor is my art. My values have changed quite drastically, and some firmly believed ethos—I have shed without leaving a trace. More importantly I got to read tons of poetry from around the world.</p>
<p>As a result, I did something to my old writing. To borrow an action from <a href="https://en.wikipedia.org/wiki/Konstantin_Paustovsky">Paustovsky</a>, and from one of my own poems (roughly translated):</p>
<blockquote>
<p>&ldquo;I set the field of paper flowers on fire<br>
 so that none may see&rdquo;</p>
</blockquote>
<p>I did that in the most literal way possible. I discarded most of my old writing without any guilt or remorse whatsoever. As the papers burn, I felt the weight of being associated with them lift off my shoulders.</p>
<p>Today, I am much more closer to a book of poetry than I have ever been. I worked without any time lines to keep. So I took my time. The funny thing is, there might be a chance that I never quite finish them. Even now, I find myself editing the words of a poem I had written years ago. I am actually hoping that the time would be soon because the more I delay, bigger is the risk of me taking a flame to this particular collection of papers as well.</p>
<p>For what it is worth, I think there soon would be a time when I decide, that it is as good time as any to take a snapshot of my words, and call it a book. Who knows, it might even get published.</p>
<p> </p>
<hr>
<h1 id="untitled-sci-fi-novel-english">Untitled sci-fi novel (English)</h1>
<p>I had not really written anything this ambitious on longer formats. I once tried to write a fiction in Sinhala, a long time ago, and managed to have fun writing the first act. Then I realized a couple of things. First, it was going to end up a short story—which was fine. But the next realization was a much more severe blow. I felt I was writing a derived story. It was not a plagiarized plot, but it felt like something anyone has heard before. And, that proved to be the end of it.</p>
<p>I cannot really remember where the initial spark came from. But there is a story unfolding in my mind. Somewhere in November, 2016, I started writing it down—bits and pieces, from here and there.</p>
<p>When I started working on this sci-fi/fantasy novel, I not only started having a ridiculous amount of fun figuring out how the story was unfolding, but I also found the <em>need</em> to write. It felt like a story no one else would write, it felt like a story only I could write. Every time my inner critic felt, &ldquo;that bit is not that great&rdquo;, my sense of wonder kicked-in, enthusiastically saying things like: &ldquo;Well, you are the one creating it! Make it awesome!&rdquo;</p>
<p>Right around the time I was carefully climbing down that euphoric high, a few stars happened to align just the wrong way. For one, I got supper busy with work, where I had to juggle three different full-time job roles.</p>
<p>Then, I embraced anime and pretty much gave up on TV shows (with the occasional exception on Netflix). Previously I had only watched anime which were special to me (e.g., Naruto and Naruto: Shippuden) or were rated as some of the all-time best (e.g., Fullmetal Alchemist: Brotherhood, Steins;Gate, Code Geass, Psycho-Pass, Death Note, Attack on Titan). I eventually fully understood that anime is not a genre, but rather a medium. I started venturing outside my comfort zone to watch anime that had not been rated yet, or were lesser known, or did not sound like something I would normally enjoy. This proved to be amazingly rewarding as I got to watch some amazing shows (e.g., Made in Abyss, Rascal Does Not Dream of Bunny Girl Senpai, The Promised Neverland, Mob Psycho 100, etc.).</p>
<p>I digress, again. The point is—having being exposed to an entire medium of storytelling—I gained a new perspective about storytelling, at the same time becoming painfully aware how clichéd some of the plot devices which I had previously thought innovative going by western media standards. This was a lesson for me. I never underestimated anime, but I had overestimated what I thought as good storytelling.</p>
<p>Finally, <a href="https://en.wikipedia.org/wiki/Black_Panther_(film)">Black Panther</a> happened. It is easy to overlook it as just another superhero film leading up to the next Avengers film. But as an outsider and a person of color, I could see Black Panther checking so many boxes I felt had been left unchecked for too long—things such as colored protagonists, colored characters in their native settings, celebration of their cultures, garb, music, etc., lack of white-saviors or white-narrators, etc. Black Panther may have been yet another superhero movie, but there is no denying how big a breakthrough it was. It made me happy and left me somewhat satiated for a while. I felt, at least a part of what I set out to do had been achieved—probably far better than I ever could. So I did put the book on hold indefinitely, even though not entirely deliberately.</p>
<p>The good news is, I am going to tell the story I have. I will keep working on it and I will keep writing. In fact, I quite recently figured out a key driving point which I had not been able to nail-down before. The world-building is not entirely complete, some of the character arcs are not fully developed yet, I still do not know how some of the plot points in the middle gets worked out, but the story is unravelling—and, I fully intend to write it.</p>
<p> </p>
<hr>
<p> </p>
<p>As there is not much else to say about the poetry chapbook (in English) other than it may or may not become a thing, I will leave a bit of early details about the novel as a token of my appreciation for reaching this point in the post.</p>
<p>The novels&rsquo; setting will be in South Asia—Sri Lanka and adjacent area to be a little more specific. The names of the two main protagonists start with R and A. It generally fits into sci-fi/fantasy classification. The novel will be the first book (out of perhaps three), but that is just for me to structure things. I am only going to work on the first book. The rest will follow, if they do.</p>
<p>There will be no time line plans, but it is also not something &ldquo;someday, eventually&rdquo; either. I will keep working on it, and it will be ready when it is. When it is, I will keep you posted.</p>
]]></content>
        </item>
        
        <item>
            <title>This one weird trick can increase your information security—Mind the (air) gap</title>
            <link>https://gaveen.me/2019/01/mind-the-air-gap/</link>
            <pubDate>Wed, 23 Jan 2019 06:00:00 +0530</pubDate>
            
            <guid>https://gaveen.me/2019/01/mind-the-air-gap/</guid>
            <description>The year is 2019. People are connecting all sorts of things to the internet. I am sort of surprised I even have to mention this but—for the most part, we are not really thinking this through.
For the last five years, I have been working with a group of companies—with whom I have worked before—to get a data center business up and running. Our team did not forget that everything is on the cloud now, we just remembered clouds also need to be made of something—Linux servers, mostly.</description>
            <content type="html"><![CDATA[<p>The year is 2019. People are connecting all sorts of things to the internet. I am sort of surprised I even have to mention this but—for the most part, we are not really thinking this through.</p>
<p>For the last five years, I have been working with a group of companies—with whom I have worked before—to get a data center business up and running. Our team did not forget that everything is on the cloud now, we just remembered clouds also need to be made of something—Linux servers, mostly.</p>
<p>While this has been ongoing, I have also seen <em>&ldquo;Internet of Things&rdquo; (IoT)</em> go from a mere buzzword to an <a href="https://www.networkworld.com/article/3123672/security/largest-ddos-attack-ever-delivered-by-botnet-of-hijacked-iot-devices.html">internet breaking, botnet making</a> steam roller. Chances are, as you read this, you also have &ldquo;smart&rdquo; devices connected to the internet.</p>
<p>This is not really news. We have been connecting things to the internet even before <em>Internet of Things</em> became a thing and we started slapping the &ldquo;smart&rdquo; sticker to everything including actual kitchen sinks. But I thought it would have been the obvious sane choice to draw a line at critical infrastructure—at least things that can have an effect on safety and life support.</p>
<p>I have been known to be wrong before.</p>
<p>Even to date, some smart home thermostats depend on an internet connection to regulate temperature within a house. I am not sure, at what point the makers of these decided that depending on an internet connection to keep families warm and comfortable was an acceptable system design or an acceptable risk factor.</p>
<p>As humans, our technology has not been inherently good or bad—like Godzilla. But how we have used it though, have been questionable at best—like Godzilla movies. There are obvious ethical and <a href="http://gaveen.me/paying-for-the-free-services">privacy-related concerns</a> of technology. But those are for other times.</p>
<p> </p>
<hr>
<p> </p>
<p>How this came into my work-life radar was seeing some service providers offer solutions such as remote <a href="https://en.wikipedia.org/wiki/Network_operations_center">Network Operations Center (NOC)</a> facilities, which usually made me uneasy. As long as I held such responsibilities as of an internal auditor or subject-matter expert, my risk assessments of these kind of scenarios almost always came out as unacceptable (and in many cases, unnecessary to begin with) within the given context.</p>
<p>Coming back to the topic at hand—as part of my work setting up an internet  data center, one of the well-known vendors in the industry pitched us a cloud-based DCIM as a service: a Data Center Infrastructure Management system connected to the cloud. I instinctively flinched at the mention.</p>
<p>Again, I maintain, there could be scenarios where this makes sense. But let us consider this one. We were building an internet data center, which would house critical IT infrastructure of multiple clients. The DCIM would manage the whole of the facility infrastructure including thermal, fire protection, environmental monitoring, and at least parts of power infrastructure (e.g., UPS systems). Which meant, the vendor was pitching us to connect all of the above systems within our data center facility&rsquo;s critical infrastructure to the internet. There was of course the promise of secure VPNs, communication security, etc. However, they did not have any standardized certifications (e.g., ISO 27001) at that point either. If their marketing was to be believed, multiple data centers in India were already using this or similar services.</p>
<p>Let that sink in for a bit. In the age of <a href="https://en.wikipedia.org/wiki/Spectre_(security_vulnerability)">unfixable hardware vulnerabilities</a>, <a href="https://en.wikipedia.org/wiki/Heartbleed">critical bugs in ubiquitous software</a>, and mass surveillance, some people who operate critical IT infrastructure are willingly adding more potential attack vectors, increasing information security operations complexity, without any standard indication of service provider security practices, because cloud.</p>
<p>Even forgetting additional factors, keeping a data center&rsquo;s security tied down is a huge and an increasingly difficult task. Throw the possibility of a bad actor gaining access to the infrastructure management system into the mix—it becomes almost always impossible to justify the risk. This is why data centers (and other critical infrastructure) usually are <a href="https://en.wikipedia.org/wiki/Air_gap_%28networking%29">air-gapped</a>.</p>
<p>I do not know how further I need to drive this point across. If you have or planning any infrastructure that can use connectivity, assess if it is essential to have the connectivity. Unless it is, even then unless the risks are understood, mitigated, and accepted—perhaps opt not to connect it to the internet. It is that simple.</p>
]]></content>
        </item>
        
        <item>
            <title>Paying for the free services</title>
            <link>https://gaveen.me/2019/01/paying-for-the-free-services/</link>
            <pubDate>Mon, 14 Jan 2019 06:00:00 +0530</pubDate>
            
            <guid>https://gaveen.me/2019/01/paying-for-the-free-services/</guid>
            <description>You may be already tired of hearing this, or at the least, you must have heard a variation of this—&amp;ldquo;if something is free, you may be the price paid&amp;rdquo;. While I think this is cynical, I cannot disagree that it holds up true in many things we happily consume today.
Like it or not, we are in an era of transition—specially when it comes to the way we think about privacy.</description>
            <content type="html"><![CDATA[<p>You may be already tired of hearing this, or at the least, you must have heard a variation of this—&ldquo;if something is free, you may be the price paid&rdquo;. While I think this is cynical, I cannot disagree that it holds up true in many things we happily consume today.</p>
<p>Like it or not, we are in an era of transition—specially when it comes to the way we think about privacy. For the most part, we have been complacent in selling our privacy in exchange of some conveniences. We are complacent enough to let Google <a href="https://apnews.com/828aefab64d4411bac257a07c1af0ecb">track our every movement</a>, as long as it can give us turn-by-turn directions with live traffic updates. We are complacent enough to let Amazon <a href="https://www.wired.com/2016/12/alexa-and-google-record-your-voice/">listen to us in our homes</a>, as long as it can order things for us. We are complacent enough to let Apple <a href="https://youtu.be/3JgcbtxURA4">deny customers full-ownership</a> of the products they already paid for, as long as we get shiny new gadgets to carry around. We are complacent enough to let Facebook get away with <a href="https://duckduckgo.com/?q=facebook+admits+to">blatant disregard</a> of user interest and exploitation of the public psyche, as long as we can check on what other people are doing.</p>
<p>This invasive nature is largely a product of modern consumerism—businesses need to make a profit in order to continue running a business. When we no longer want to pay for things they sell, they have gotten creative with how they can make money—they will give things for free, as long as we <a href="https://youtu.be/5pFX2P7JLwA">pay with our privacy</a>. So, an email company is able to give free accounts to us while they can make a profit by advertising (or selling our information to advertisers). Some so called &ldquo;VPN&rdquo; service providers can give us free communication facilities by tapping into what and how we communicate. This is merely where the rabbit hole begins.</p>
<p>Since I am not in the thought-leading business, I would not try to get you sold on a solution. Current technology landscape is complex and multi-faceted. For the scale of course correction we need, it will take a while and a significant shift in awareness. Fortunately, we are seeing signs of conciousness and self-criticism about the technology and its direction in our post-Snowden world. We do not know if we would get there at all, but there are lots of smart people and organizations working to make these difficult pushes—and they could definitely use our help.</p>
<p>In the meantime, we also can be more concious about technology choices we make.</p>
<ul>
<li><strong>Try to pick products and services that give user interest the priority.</strong> <em>e.g.</em>, Try <a href="https://www.mozilla.org/en-US/firefox/new/">Firefox</a> instead of Chrome. Firefox is open source, privacy concious, and does not include tracking. Apart from the regular mobile version, there is also <a href="https://www.mozilla.org/en-US/firefox/mobile/#focus">Firefox Focus</a>, which provides a more privacy-oriented experience for mobile devices.</li>
<li><strong>Try to pick products and services that do not track you.</strong> <em>e.g.</em>, Try <a href="https://duckduckgo.com/">DuckDuckGo</a> for searching. I fully switched to it a few months ago and did not terribly miss Google Search. If you still occasionally need other search services, you can still use <a href="https://duckduckgo.com/bang">!commands</a>.</li>
<li><strong>Try to use general-purpose blocking tools.</strong> <em>e.g.</em>, Try <a href="https://github.com/gorhill/uBlock/">uBlock Origin</a> which is an open source, less-resource consuming, general-purpose blocking software which works with many browsers to block invasive advertising/tracking. You can set custom blocking rules, as well as enable/disable it by web pages.</li>
<li><strong>Try to use products and services which has end-to-end strong encryption with forward secrecy.</strong> <em>e.g.</em>, Try <a href="https://www.signal.org/">Signal</a> messaging service which provides a secure alternative to popular messaging apps. They are open source and use well-tested cryptographic software.</li>
<li><strong>Try to pay for products and services which support free users by subsidising—&ldquo;freemium&rdquo; if you will.</strong> <em>e.g.</em>, Try <a href="https://protonvpn.com/">ProtonVPN</a> instead of using dodgy &ldquo;free&rdquo; VPNs. They have a paying customer base who receives added benefits, while free users can enjoy a non-compromised core service.</li>
<li><strong>Try to pay for products and services with encryption, instead of services which do not.</strong> <em>e.g.</em>, Try <a href="https://spideroak.com/one/">SpiderOak One</a> for encrypted online backup. Some other popular backup and sync services do not encrypt what they store online.</li>
<li><strong>Try to pay for pro-privacy and pro-encryption open source projects when you can.</strong> <em>e.g.</em>, Try <a href="https://bitwarden.com/">Bitwarden</a> Password Manager, which is a project that provides an open source replacement to services like 1Password and LastPass. Also, try <a href="https://standardnotes.org/">Standard Notes</a> which provides an open source alternative to services like Evernote.</li>
<li><strong>Try to support open source projects aiming to build pro-privacy strong-encryption based software.</strong> <em>e.g.</em>, Check <a href="https://www.wireguard.com/">WireGuard</a> which is trying to bring an open source, easy to use, modern, secure VPN tunnelling solution to the mainstream.</li>
</ul>
<p>Of course, the above examples are provided as just that. I may use these services, but you do not have to. You are free to consider the points I have tried to make here, but please make any choices with your own sound judgement. If you decide to try though, I can promise that none of the above links are affiliated.</p>
]]></content>
        </item>
        
        <item>
            <title>What is the meaning of that poem?</title>
            <link>https://gaveen.me/2019/01/what-is-the-meaning-of-that-poem/</link>
            <pubDate>Mon, 07 Jan 2019 06:00:00 +0530</pubDate>
            
            <guid>https://gaveen.me/2019/01/what-is-the-meaning-of-that-poem/</guid>
            <description>I am a poet, and that much I can say without the uncertainty I allude in the current bio section of this blog which reads &amp;ldquo;SysAdmin, Programming Language Tourist, and Petty Dabbler of the Written Word&amp;rdquo;, or my first post here.
My work as a poet, or a writer is mainly to write. But, I write mainly for the sheer joy of reading it back, in every way I get to.</description>
            <content type="html"><![CDATA[<p>I am a poet, and that much I can say without the uncertainty I allude in the current bio section of this blog which reads <em>&ldquo;SysAdmin, Programming Language Tourist, and Petty Dabbler of the Written Word&rdquo;</em>, or my <a href="http://gaveen.me/here-we-go">first post here</a>.</p>
<p>My work as a poet, or a writer is mainly to write. But, I write mainly for the sheer joy of reading it back, in every way I get to. Let me explain that a little bit.</p>
<p>Once I have something written and shared, it is yours to read, mine too. When you read it, if you think what I wrote is profoundly about a fat lady dancing like an angel on a tight rope over the Grand Canyon while wearing a pygmy hippopotamus as her head wear, then, it is about that too.</p>
<p>In short, I do not think poetry has an intrinsic nature as poetry without the reader. At least, this is my current level of understanding. I, like many before me, have thought long, hard, and often enough about this. And, I am yet to convince myself that a poem has a &ldquo;poetic nature&rdquo; sans its reader/experience. Therefore, naturally I like to consider <em>the reader</em> as part of the poetry itself.</p>
<p>So, you do not have to ask me what any of my poems mean. There might have been a particular way, or many ways I read it. Those may or may not have been what I thought about the poem while I was writing it. It could be <a href="https://en.wiktionary.org/wiki/metapoetry">metapoetry</a>, it could be about antidisestablishmentarianism or, it could be about love, or political oppression, or other things. But, let me not hold you back.</p>
<p>Let me not hold you from reading the way you could or want, or limit your freedom of experiencing it your own way. You may find meaning, or unmeaning, or non-meaning, or simply none. Would it not be be great to let it be, whatever it will be every time you read it?</p>
]]></content>
        </item>
        
        <item>
            <title>Here we go</title>
            <link>https://gaveen.me/2019/01/here-we-go/</link>
            <pubDate>Tue, 01 Jan 2019 06:00:00 +0530</pubDate>
            
            <guid>https://gaveen.me/2019/01/here-we-go/</guid>
            <description>Where should I begin? Is this on?
Hello there! Welcome, fellow human being, and of course, any other that is reading. This is presumably Gaveen, and—despite all my efforts—you have found my blog. If this is the choice of Steins;Gate, who am I to complain.
There are no grand introductions here, nor any road maps to unveil—just the simple realization to be had that I may have moved my blog yet another time.</description>
            <content type="html"><![CDATA[<p>Where should I begin? Is this on?</p>
<p>Hello there! Welcome, fellow human being, and of course, any other that is reading. This is presumably Gaveen, and—despite all my efforts—you have found my blog. If this is the choice of Steins;Gate, who am I to complain.</p>
<p>There are no grand introductions here, nor any road maps to unveil—just the simple realization to be had that I may have moved my blog yet another time. There is however, a simple promise to write when I can, and a promise to enjoy the promise of writing.</p>
<p>To say the least, I write because I enjoy writing. Even more, I write for the joy of reading it afterwards and enjoying it in the ever so slightly different way I possibly can. The trick is to have someone else along for the ride, which would make things far better. Hopefully, this is where you come in.</p>
<p>So, here we go, fellow traveller. <a href="https://gaveen.blogspot.com/">One part</a> of my journey is over and behind me. And this, here, is something fresh I hope. Let us be on the way.</p>
]]></content>
        </item>
        
    </channel>
</rss>
